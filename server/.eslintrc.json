{
  "env": {
    "es2021": true,
    "node": true
  },
  "extends": [
    "airbnb-typescript",
    "prettier",
    "plugin:promise/recommended",
    "plugin:unicorn/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "tsconfig.json",
    "ecmaVersion": 2023,
    "sourceType": "module"
  },
  "plugins": ["promise", "eslint-plugin-import"],
  "rules": {
    "no-underscore-dangle": ["error", { "allowAfterThis": true }],
    "@typescript-eslint/no-unused-vars": ["warn", { "argsIgnorePattern": "^_" }],
    "react/jsx-filename-extension": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase", "snake_case"]
      },
      {
        "selector": "variable",
        "format": ["PascalCase", "UPPER_CASE"],
        "types": ["boolean"],
        "prefix": ["is", "should", "has", "can", "did", "will"]
      },
      {
        "selector": "variableLike",
        "format": ["camelCase", "UPPER_CASE", "PascalCase", "snake_case"]
      },

      {
        "selector": "parameter",
        "format": ["camelCase", "snake_case"],
        "leadingUnderscore": "allowSingleOrDouble"
      },
      {
        "selector": "memberLike",
        "modifiers": ["private"],
        "format": ["camelCase"],
        "leadingUnderscore": "forbid"
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "property",
        "modifiers": ["readonly"],
        "format": ["PascalCase"]
      },
      {
        "selector": "enumMember",
        "format": ["camelCase"]
      }
    ],
    "unicorn/filename-case": ["error", { "case": "camelCase" }],
    "unicorn/switch-case-braces": "off",
    "unicorn/prevent-abbreviations": "off",
    "unicorn/prefer-top-level-await": "off",
    "unicorn/prefer-ternary": "off",
    "unicorn/prefer-module": "off",
    "unicorn/no-array-for-each": "off",
    "unicorn/prefer-node-protocol": "off"
  }
}
