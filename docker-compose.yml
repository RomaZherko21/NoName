version: '3.8'

x-my-sql-variables: &my-sql-variables
  MYSQL_DATABASE: ${MYSQL_DATABASE}
  MYSQL_USERNAME: ${MYSQL_USERNAME}
  MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
  MYSQL_HOST: ${MYSQL_HOST}
  MYSQL_PORT_OUTER: ${MYSQL_PORT_OUTER}

x-node-api-variables: &node-api-variables
  NODE_API_PROTOCOL: ${NODE_API_PROTOCOL}
  NODE_API_HOST: ${NODE_API_HOST}
  NODE_API_PORT: ${NODE_API_PORT}
  ACCESS_TOKEN_EXPIRED_TIME: ${ACCESS_TOKEN_EXPIRED_TIME}
  TOKEN_SECRET: ${TOKEN_SECRET}

x-client-variables: &client-variables
  CLIENT_PROTOCOL: ${CLIENT_PROTOCOL}
  CLIENT_HOST: ${CLIENT_HOST}
  CLIENT_PORT: ${CLIENT_PORT}

services:
  mysql_db:
    container_name: mysql_db
    build:
      context: ./MySQL
      target: MySQL_DB
    volumes:
      - 'mySQL_db_volume:/var/lib/mysql'
    restart: always
    cap_add:
      - SYS_NICE
    environment:
      <<: *my-sql-variables

  nginx:
    container_name: nginx
    build:
      context: ./nginx
    depends_on:
      - node_api
      - client
    restart: always
    ports:
      - ${NGINX_PORT_OUTER}:80

  node_api:
    container_name: node_api
    build:
      context: ./server
      target: node_api
    volumes:
      - node_api_volume:/app/node_modules
      - ./server:/app
    depends_on:
      - mysql_db
    environment:
      <<: *my-sql-variables
      <<: *node-api-variables
      <<: *client-variables
      MYSQL_HOST_IP: mysql_db
  
  go_api:
      container_name: go_api
      build:
        context: ./goApi
        target: go_api
      depends_on:
        - mysql_db
      ports:
        - ${GO_API_PORT_OUTER}:${GO_API_PORT_INNER}
      environment:
        <<: *my-sql-variables
        GO_API_PORT_INNER: ${GO_API_PORT_INNER}

  client:
    container_name: client
    build:
      context: ./client
      target: client
    volumes:
      - client_volume:/app/node_modules
      - ./client:/app
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true

  adminer:
    container_name: adminer
    image: adminer:4.8.1
    depends_on:
      - mysql_db
    restart: unless-stopped
    ports:
      - ${MY_SQL_ADMINER_PORT_OUTER}:8080
    environment:
      ADMINER_DEFAULT_SERVER: mysql_db

volumes:
  mySQL_db_volume:
  client_volume:
  node_api_volume:
  go_api_volume:
