// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/go-api/authors/{id}": {
            "get": {
                "description": "get author by it's id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "author"
                ],
                "summary": "getAuthorById",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Author ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/go-api/authors/{id}/books": {
            "get": {
                "description": "get all books by author id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "author"
                ],
                "summary": "getBooksByAuthorId",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Author ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/go-api/books": {
            "get": {
                "description": "get all books",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "getAllBooks",
                "responses": {}
            }
        },
        "/go-api/books/{id}": {
            "get": {
                "description": "get book by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "getBookById",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/go-api/books/{id}/stats": {
            "get": {
                "description": "get all books stats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "getBookStatsById",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/go-api/genres": {
            "get": {
                "description": "get all genres",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genres"
                ],
                "summary": "getAllGenres",
                "responses": {}
            }
        },
        "/go-api/subscribers/": {
            "get": {
                "description": "get all subscribers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscribers"
                ],
                "summary": "getAllSubscribers",
                "responses": {}
            },
            "post": {
                "description": "create subscriber",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscribers"
                ],
                "summary": "createSubscriber",
                "parameters": [
                    {
                        "description": "Subscriber JSON",
                        "name": "subscriber",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/goapi.Subscriber"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/go-api/subscribers/{id}": {
            "get": {
                "description": "get subscriber by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscribers"
                ],
                "summary": "getSubscriberById",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subscriber ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "put": {
                "description": "create subscriber",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscribers"
                ],
                "summary": "updateSubscriberById",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subscriber ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Subscriber JSON",
                        "name": "subscriber",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/goapi.Subscriber"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "delete subscriber by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscribers"
                ],
                "summary": "deleteSubscriberById",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subscriber ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/go-api/subscribtions": {
            "get": {
                "description": "get all subscribtions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscribtions"
                ],
                "summary": "getAllSubscribtions",
                "responses": {}
            }
        }
    },
    "definitions": {
        "goapi.Subscriber": {
            "type": "object",
            "properties": {
                "date_of_birth": {
                    "type": "string",
                    "example": "1970-04-21"
                },
                "id": {
                    "type": "integer"
                },
                "middle_name": {
                    "type": "string",
                    "example": "Stark"
                },
                "name": {
                    "type": "string",
                    "example": "Anthony"
                },
                "surname": {
                    "type": "string",
                    "example": "Edward"
                },
                "tel_number": {
                    "type": "string",
                    "example": "+375-25-777-55-44"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "NoName go_api",
	Description:      "something about this app",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
